//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table User {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  name String [not null]
  lastName String [not null]
  username String [unique, not null]
  email String [unique, not null]
  hashedPassword String
  role String [not null, default: 'USER']
  emailVerified Boolean [not null, default: false]
  sex Sex [not null]
  tokens Token [not null]
  sessions Session [not null]
  createdEvents Event [not null]
  joinedEvents Event [not null]
  followers Follower [not null]
  followees Follower [not null]
  images Images
  providers Provider [not null]
}

Table Images {
  id String [pk]
  url_small String [not null]
  url_medium String [not null]
  url_large String [not null]
  userId String [unique]
  user User
  eventId String [unique]
  event Event
  providerId String [unique]
  provider Provider
}

Table Follower {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  follower User [not null]
  followerId String [not null]
  followee User [not null]
  followeeId String [not null]

  indexes {
    (followerId, followeeId) [unique]
  }
}

Table Session {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  expiresAt DateTime
  handle String [unique, not null]
  hashedSessionToken String
  antiCSRFToken String
  publicData String
  privateData String
  user User
  userId String
}

Table Token {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  hashedToken String [not null]
  type String [not null]
  expiresAt DateTime [not null]
  sentTo String [not null]
  user User [not null]
  userId String [not null]

  indexes {
    (hashedToken, type) [unique]
  }
}

Table Event {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  name String [not null]
  date DateTime [not null]
  capacity Int [not null]
  visibility EventVisibility [not null, default: 'Public']
  owner User [not null]
  ownerId String [not null]
  participants User [not null]
  location Location
  images Images
  paymentOptions PaymentOption [not null]
}

Table PaymentOption {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  name String [not null]
  price Int [not null]
  description String
  event Event
  eventId String
}

Table Location {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  latitude Float [not null]
  longitude Float [not null]
  alias String [not null]
  event Event [not null]
  eventId String [unique, not null]
}

Table Provider {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  name String [not null]
  services Service [not null]
  user User [not null]
  userId String [not null]
  images Images
}

Table Service {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  title String [not null]
  description String [not null]
  price Float [not null]
  provider Provider [not null]
  providerId String [not null]
}

Table event_participants {
  joinedeventsId String [ref: > Event.id]
  participantsId String [ref: > User.id]
}

Enum Sex {
  Male
  Female
  Other
}

Enum EventVisibility {
  Public
  Private
}

Ref: Images.userId - User.id [delete: Cascade]

Ref: Images.eventId - Event.id [delete: Cascade]

Ref: Images.providerId - Provider.id [delete: Cascade]

Ref: Follower.followerId > User.id [delete: Cascade]

Ref: Follower.followeeId > User.id [delete: Cascade]

Ref: Session.userId > User.id

Ref: Token.userId > User.id

Ref: Event.ownerId > User.id [delete: Cascade]

Ref: PaymentOption.eventId > Event.id [delete: Cascade]

Ref: Location.eventId - Event.id [delete: Cascade]

Ref: Provider.userId > User.id [delete: Cascade]

Ref: Service.providerId > Provider.id [delete: Cascade]